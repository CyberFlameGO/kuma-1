syntax = "proto3";

package kuma.mesh.v1alpha1;

option go_package = "github.com/kumahq/kuma/api/mesh/v1alpha1";

import "mesh/v1alpha1/selector.proto";

import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";
import "validate/validate.proto";
import "config.proto";

message RateLimit {
  // List of selectors to match dataplanes that rate limit will be applied for
  repeated Selector sources = 1 [ (validate.rules).repeated .min_items = 1 ];

  // List of selectors to match services that need to be rate limited.
  repeated Selector destinations = 2
      [ (validate.rules).repeated .min_items = 1 ];

  message Conf {
    message Http {
      // The number of allowed HTTP requests this RateLimiter allows
      // +required
      uint32 requests = 1;

      // The the interval for which `requests` will be accounted.
      // +required
      google.protobuf.Duration interval = 2;

      message OnRateLimit {
        // The HTTP status code to be set on a RateLimit event
        // +optional
        google.protobuf.UInt32Value status = 1;

        message HeaderValue {
          // Header name
          // +optional
          string key = 1;
          // Header value
          // +optional
          string value = 2;

          // Should the header be appended
          // +optional
          google.protobuf.BoolValue append = 3;
        }

        // The Headers to be added to the HTTP response on a RateLimit event
        // +optional
        repeated HeaderValue headers = 3;
      }

      // Describes the actions to take on RatelLimiter event
      // +optional
      OnRateLimit onRateLimit = 3;
    }

    message Tcp {
      // The number of allowed TCP connections in the interval
      //  +optional
      uint32 connections = 1;

      // The the interval for which `connections` will be accounted.
      //  +optional
      google.protobuf.Duration interval = 2;
    }

    // The HTTP RateLimit configuration
    // +optional
    Http http = 1;

    // The TCP RateLimit configuration
    // +optional
    Tcp tcp = 2;
  }

  // Configuration for RateLimit
  // +required
  Conf conf = 3;
}
